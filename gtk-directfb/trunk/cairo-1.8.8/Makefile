# Makefile.in generated by automake 1.10.2 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Creating ChangeLog files from git log:

# We always create a ChangeLog that contains the most recent changes, and
# multiple others for changes between major releases (other than the last such
# segment that we put in 'ChangeLog'.  The old ones are named
# ChangeLog.pre-X.Y where X.Y is the version number of the major release.

# Some custom targets to make it easier to release things.
#
# To make real stable releases or devel snapshots, use either:
#		make release-check
# or		make release-publish
#
# To make a quick properly named (date and git hash stamped) tarball:
#		make snapshot

pkgdatadir = $(datadir)/cairo
pkglibdir = $(libdir)/cairo
pkgincludedir = $(includedir)/cairo
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = mipsel-unknown-linux-gnu
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/build/Makefile.am.analysis \
	$(srcdir)/build/Makefile.am.changelog \
	$(srcdir)/build/Makefile.am.releasing $(srcdir)/config.h.in \
	$(top_srcdir)/build/Makefile.am.common $(top_srcdir)/configure \
	$(top_srcdir)/src/cairo-features-uninstalled.pc.in \
	$(top_srcdir)/src/cairo-uninstalled.pc.in AUTHORS COPYING \
	ChangeLog INSTALL NEWS build/compile build/config.guess \
	build/config.sub build/depcomp build/install-sh \
	build/ltmain.sh build/missing config.guess config.sub depcomp \
	install-sh ltmain.sh missing
EXTRA_PROGRAMS =
TESTS =
check_PROGRAMS =
# libpng is required for our test programs
am__append_1 = boilerplate test perf
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/aclocal.cairo.m4 \
	$(top_srcdir)/build/aclocal.compare.m4 \
	$(top_srcdir)/build/aclocal.dolt.m4 \
	$(top_srcdir)/build/aclocal.enable.m4 \
	$(top_srcdir)/build/aclocal.float.m4 \
	$(top_srcdir)/build/aclocal.gtk-doc.m4 \
	$(top_srcdir)/build/aclocal.makefile.m4 \
	$(top_srcdir)/build/aclocal.pkg.m4 \
	$(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/cairo-version.h \
	$(top_srcdir)/build/configure.ac.version \
	$(top_srcdir)/build/configure.ac.tools \
	$(top_srcdir)/build/configure.ac.system \
	$(top_srcdir)/build/configure.ac.features \
	$(top_srcdir)/build/configure.ac.warnings \
	$(top_srcdir)/build/configure.ac.analysis \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = cairo-uninstalled.pc cairo-xlib-uninstalled.pc \
	cairo-xlib-xrender-uninstalled.pc cairo-xcb-uninstalled.pc \
	cairo-quartz-uninstalled.pc cairo-quartz-font-uninstalled.pc \
	cairo-quartz-image-uninstalled.pc cairo-win32-uninstalled.pc \
	cairo-win32-font-uninstalled.pc cairo-os2-uninstalled.pc \
	cairo-beos-uninstalled.pc cairo-png-uninstalled.pc \
	cairo-glitz-uninstalled.pc cairo-directfb-uninstalled.pc \
	cairo-ft-uninstalled.pc cairo-ps-uninstalled.pc \
	cairo-pdf-uninstalled.pc cairo-svg-uninstalled.pc
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run aclocal-1.10
AMTAR = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run tar
AR = mipsel-linux-ar
AS = as
AUTOCONF = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run autoconf
AUTOHEADER = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run autoheader
AUTOMAKE = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run automake-1.10
AWK = gawk
CAIROPERF_LIBS = -lrt
CAIRO_CFLAGS =  -I/opt/mipsel-linux-uclibc/usr/include/pixman-1      -I/opt/mipsel-linux-uclibc/usr/include/freetype2 -I/opt/mipsel-linux-uclibc/usr/include   -I/opt/mipsel-linux-uclibc/usr/include   -D_REENTRANT -I/opt/mipsel-linux-uclibc/usr/include/directfb   -I/usr/include/libpng12     -Wall -Wextra -Wsign-compare -Werror-implicit-function-declaration -Wpointer-arith -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations -Wnested-externs -Wpacked -Wswitch-enum -Wmissing-format-attribute -Wstrict-aliasing=2 -Winit-self -Wunsafe-loop-optimizations -Wdeclaration-after-statement -Wold-style-definition -Wno-missing-field-initializers -Wno-unused-parameter -Wno-attributes -Wno-long-long -Winline -fno-strict-aliasing -fno-common -Wp,-D_FORTIFY_SOURCE=2         
CAIRO_LIBS =  -L/opt/mipsel-linux-uclibc/usr/lib -lpixman-1      -L/opt/mipsel-linux-uclibc/usr/lib -lfreetype   -L/opt/mipsel-linux-uclibc/usr/lib -lfontconfig   -L/opt/mipsel-linux-uclibc/usr/lib -ldirectfb -lfusion -ldirect -lpthread   -lpng12    -lm    -lz -lz     -lm
CAIRO_LIBTOOL_VERSION_INFO = 10802:8:10800
CAIRO_NONPKGCONFIG_CFLAGS =         
CAIRO_NONPKGCONFIG_LIBS =    -lz -lz     -lm
CAIRO_RELEASE_STATUS = release
CAIRO_REQUIRES =  pixman-1 >= 0.12.0    freetype2 >= 9.7.3 fontconfig directfb libpng12 
CAIRO_TEST_UNDEFINED_LDFLAGS = -Wl,--allow-shlib-undefined
CAIRO_VERSION_MAJOR = 1
CAIRO_VERSION_MICRO = 8
CAIRO_VERSION_MINOR = 8
CAIRO_VERSION_SONUM = 2
CC = mipsel-linux-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = mipsel-linux-gcc -E
CPPFLAGS = 
CXX = mipsel-linux-g++
CXXCPP = mipsel-linux-g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOLT_BASH = /bin/bash
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FIND = /usr/bin/find
FONTCONFIG_CFLAGS = -I/opt/mipsel-linux-uclibc/usr/include  
FONTCONFIG_LIBS = -L/opt/mipsel-linux-uclibc/usr/lib -lfontconfig  
FREETYPE_CFLAGS = -I/opt/mipsel-linux-uclibc/usr/include/freetype2 -I/opt/mipsel-linux-uclibc/usr/include  
FREETYPE_CONFIG = 
FREETYPE_LIBS = -L/opt/mipsel-linux-uclibc/usr/lib -lfreetype  
GLITZ_AGL_CFLAGS = 
GLITZ_AGL_LIBS = 
GLITZ_EGL_CFLAGS = 
GLITZ_EGL_LIBS = 
GLITZ_GLX_CFLAGS = 
GLITZ_GLX_LIBS = 
GLITZ_WGL_CFLAGS = 
GLITZ_WGL_LIBS = 
GREP = /bin/grep
GS = gs
GTKDOC_CHECK = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /opt/mipsel-linux-uclibc/usr/mipsel-linux-uclibc/bin/ld
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = 
LIBRSVG_LIBS = 
LIBS =  -lm
LIBSPECTRE_CFLAGS = 
LIBSPECTRE_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(COMPILE)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXXCOMPILE)
LTLIBOBJS = 
LTP = 
LTP_GENHTML = 
MAKEINFO = ${SHELL} /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /opt/mipsel-linux-uclibc/usr/bin/mipsel-linux-nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = cairo
PACKAGE_BUGREPORT = http://bugs.freedesktop.org/enter_bug.cgi?product=cairo
PACKAGE_NAME = cairo
PACKAGE_STRING = cairo 1.8.8
PACKAGE_TARNAME = cairo
PACKAGE_VERSION = 1.8.8
PATH_SEPARATOR = :
PKGCONFIG_REQUIRES = Requires.private
PKG_CONFIG = /usr/bin/pkg-config
POPPLER_CFLAGS = 
POPPLER_LIBS = 
RANLIB = mipsel-linux-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
STRIP = mipsel-linux-strip
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VERSION = 1.8.8
XARGS = /usr/bin/xargs
XMKMF = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
abs_builddir = /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8
abs_srcdir = /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8
abs_top_builddir = /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8
abs_top_srcdir = /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
directfb_CFLAGS = -D_REENTRANT -I/opt/mipsel-linux-uclibc/usr/include/directfb  
directfb_LIBS = -L/opt/mipsel-linux-uclibc/usr/lib -ldirectfb -lfusion -ldirect -lpthread  
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
glitz_CFLAGS = 
glitz_LIBS = 
gtk_CFLAGS = 
gtk_LIBS = 
host = mipsel-unknown-linux-gnu
host_alias = mipsel-linux
host_cpu = mipsel
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /media/Data/dingoo/dingux/dev/openwrt/trunk/build_dir/target-_-/cairo-1.8.8/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
pixman_CFLAGS = -I/opt/mipsel-linux-uclibc/usr/include/pixman-1  
pixman_LIBS = -L/opt/mipsel-linux-uclibc/usr/lib -lpixman-1  
png_CFLAGS = -I/usr/include/libpng12  
png_LIBS = -lpng12  
png_REQUIRES = libpng12
prefix = /opt/mipsel-linux-uclibc/usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
xcb_CFLAGS = 
xcb_LIBS = 
xlib_CFLAGS = 
xlib_LIBS = 
xlib_xrender_CFLAGS = 
xlib_xrender_LIBS = 
BUILT_SOURCES = 
CLEANFILES = *.i *.s *.gch $(EXTRA_LTLIBRARIES) $(EXTRA_PROGRAMS) \
	$(check_PROGRAMS)
DISTCLEANFILES = $(BUILT_SOURCES) config.cache doltlibtool doltcompile \
	$(srcdir)/ChangeLog.cache-* ChangeLog.cache-*
EXTRA_DIST = README.win32 Makefile.win32 build/Makefile.win32.common \
	build/Makefile.win32.features build/Makefile.win32.features-h \
	$(NULL) AUTHORS BIBLIOGRAPHY BUGS CODING_STYLE COPYING \
	COPYING-LGPL-2.1 COPYING-MPL-1.1 HACKING INSTALL NEWS \
	PORTING_GUIDE README RELEASING autogen.sh cairo-version.h \
	$(NULL)
EXTRA_LTLIBRARIES = 
MAINTAINERCLEANFILES = Makefile.in \
	$(srcdir)/build/Makefile.win32.features \
	$(srcdir)/build/Makefile.win32.features-h $(NULL) \
	$(srcdir)/aclocal.m4 $(srcdir)/autoscan.log \
	$(srcdir)/build/compile $(srcdir)/build/config.guess \
	$(srcdir)/build/config.sub $(srcdir)/build/depcomp \
	$(srcdir)/build/install-sh $(srcdir)/build/ltmain.sh \
	$(srcdir)/build/missing $(srcdir)/build/mkinstalldirs \
	$(srcdir)/config.h.in $(srcdir)/configure.scan $(NULL) \
	$(srcdir)/ChangeLog $(srcdir)/ChangeLog.pre-*
ACLOCAL_AMFLAGS = -I build
DIST_SUBDIRS = src doc util boilerplate test perf
SUBDIRS = src doc util $(am__append_1)
DISTCHECK_CONFIGURE_FLAGS = \
	--enable-gtk-doc \
	--enable-test-surfaces \
	$(NULL)

CURR_CHANGELOG_VERSION = $(CAIRO_VERSION_MAJOR).$$(echo "($(CAIRO_VERSION_MINOR)+1)/2*2" | bc)
# examines $version
PREV_CHANGELOG_VERSION = $$(if test "x$$(echo "($$version-0.1)*2/2"|bc)" = "x$$(echo "$$version*2/2"|bc)"; \
			  then echo "$$version-$$(echo "$$version" | sed 's/[0-9]/0/g;s/[0-9]$$/2/')"; \
			  else echo "$$version-1.0"; \
			  fi | bc | sed 's/[.]0*/./;s/^0[.]\?$$/initial/;s/[.]$$/.0/')

CHANGELOGS = ChangeLog \
	`version=$(CURR_CHANGELOG_VERSION); \
	version=$(PREV_CHANGELOG_VERSION); \
	while test "x$$version" != xinitial; do \
		echo ChangeLog.pre-$$version; \
		version=$(PREV_CHANGELOG_VERSION); \
	done`

TAR_OPTIONS = --owner=0 --group=0
RELEASE_OR_SNAPSHOT = $$(if test "x$(CAIRO_VERSION_MINOR)" = "x$$(echo "$(CAIRO_VERSION_MINOR)/2*2" | bc)" ; then echo release; else echo snapshot; fi)
RELEASE_UPLOAD_HOST = cairographics.org
RELEASE_UPLOAD_BASE = /srv/cairo.freedesktop.org/www
RELEASE_UPLOAD_DIR = $(RELEASE_UPLOAD_BASE)/$(RELEASE_OR_SNAPSHOT)s
RELEASE_URL_BASE = http://cairographics.org/$(RELEASE_OR_SNAPSHOT)s
RELEASE_ANNOUNCE_LIST = cairo-announce@cairographics.org (and CC gnome-announce-list@gnome.org)
MANUAL_DATED = cairo-manual-`date +%Y%m%d`
MANUAL_TAR_FILE = $(MANUAL_DATED).tar.gz
MANUAL_VERSIONED = manual-$(VERSION)
MANUAL_VERSIONED_TAR_FILE = $(MANUAL_VERSIONED).tar.gz
MANUAL_UPLOAD_DIR = $(RELEASE_UPLOAD_BASE)
tar_file = $(PACKAGE)-$(VERSION).tar.gz
sha1_file = $(tar_file).sha1
gpg_file = $(sha1_file).asc

# Win32 package zipfiles
#runtime_zip_file = $(PACKAGE)-$(VERSION).zip
#developer_zip_file = $(PACKAGE)-dev-$(VERSION).zip
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build/Makefile.am.common $(srcdir)/build/Makefile.am.changelog $(srcdir)/build/Makefile.am.releasing $(srcdir)/build/Makefile.am.analysis $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
cairo-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-xlib-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-xlib-xrender-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-xcb-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-quartz-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-quartz-font-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-quartz-image-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-win32-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-win32-font-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-os2-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-beos-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-png-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-glitz-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-directfb-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-ft-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-ps-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-pdf-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
cairo-svg-uninstalled.pc: $(top_builddir)/config.status $(top_srcdir)/src/cairo-features-uninstalled.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d $(distdir) || mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  unlzma -c $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-recursive
all-am: Makefile config.h
installdirs: installdirs-recursive
installdirs-am:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-hdr \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am am--refresh check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzma dist-shar dist-tarZ dist-zip distcheck distclean \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
	ps ps-am tags tags-recursive uninstall uninstall-am


configure: cairo-version.h

doc:
	cd doc && $(MAKE) $(AM_MAKEFLAGS) $@
test retest recheck: all
	cd test && $(MAKE) $(AM_MAKEFLAGS) $@
perf: all
	cd perf && $(MAKE) $(AM_MAKEFLAGS) $@
check-valgrind: all
	cd test && $(MAKE) $(AM_MAKEFLAGS) check-valgrind
	cd perf && $(MAKE) $(AM_MAKEFLAGS) check-valgrind
.PHONY: doc test retest recheck perf check-valgrind

changelogs:
	@$(MAKE) $(AM_MAKEFLAGS) $(CHANGELOGS)

dist-hook: changelogs
	changelogs="$(CHANGELOGS)"; \
	for changelog in $$changelogs; do \
		cp $(srcdir)/$$changelog $(distdir)/ 2>/dev/null || \
		cp $$changelog $(distdir)/; \
	done

$(srcdir)/ChangeLog:
	@if test -d "$(srcdir)/.git"; then \
		version=$(CURR_CHANGELOG_VERSION); \
		prev=$(PREV_CHANGELOG_VERSION).0; \
		nearest_tag=`git describe | sed 's/-.*//'`; \
		before=$(srcdir)/ChangeLog.cache-$$prev..$$nearest_tag; \
		after=$(srcdir)/ChangeLog.cache-$$nearest_tag..; \
		$(MAKE) $(AM_MAKEFLAGS) $$before $$after && \
		echo Creating $@ && \
		{ echo '# Generated by configure.  Do not edit.'; echo; \
		  cat $$after; echo; cat $$before; } > $@; \
	else \
		test -f $@ || \
		(echo A git checkout is required to generate $@ >&2 && \
		 echo A git checkout is required to generate this file >> $@); \
	fi

ChangeLog.cache-*..: .git

ChangeLog%: $(srcdir)/ChangeLog%

$(srcdir)/ChangeLog.cache-% $(srcdir)/ChangeLog.pre-%:
	@echo Creating $@
	@if test -d "$(srcdir)/.git"; then \
	  (cd "$(srcdir)" && \
	  version=$$(echo "$@" | sed 's/.*ChangeLog\([.].*-\)\?//'); \
	  if echo "$@" | grep -q '^ChangeLog[.]cache'; then \
		spec=$$version; \
	  else \
		to=$$version; \
		test "x$$version" = x && version=$(CURR_CHANGELOG_VERSION); \
		from=$(PREV_CHANGELOG_VERSION); \
		test "x$$to" = x || to=$$to.0; \
		test "x$$from" = xinitial || from=$$from.0; \
		spec=$$from..$$to; \
	  fi; \
	  $(srcdir)/build/missing --run git log --stat "$$spec") > $@.tmp \
	  && mv -f $@.tmp $@ \
	  || ($(RM) $@.tmp; \
	      echo Failed to generate $@, your $@ may be outdated >&2); \
	else \
	  echo A git checkout is required to generate $@ >&2; \
	fi

.PHONY: changelogs ChangeLog $(srcdir)/ChangeLog

dist-hook: dist-clear-sticky-bits

# Clean up any sticky bits we may inherit from parent dir
dist-clear-sticky-bits:
	chmod -R a-s $(distdir)

snapshot:
	distdir="$(distdir)-`date '+%Y%m%d'`"; \
	test -d "$(srcdir)/.git" && distdir=$$distdir-`cd "$(srcdir)" && git rev-parse HEAD | cut -c 1-6`; \
	TAR_OPTIONS="$(TAR_OPTIONS)" $(MAKE) $(AM_MAKEFLAGS) distdir="$$distdir" snapshot-dist

snapshot-dist: dist
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'

$(sha1_file): $(tar_file)
	sha1sum $^ > $@

$(gpg_file): $(sha1_file)
	@echo "Please enter your GPG password to sign the checksum."
	gpg --armor --sign $^ 

release-verify-sane-changelogs: changelogs
	@echo -n "Checking that the ChangeLog files are sane..."
	@if grep -q "is required to generate" $(CHANGELOGS); then \
		(echo "Ouch." && echo "Some of the ChangeLogs are not generated correctly." \
		&& echo "Remove ChangeLog* and make changelogs" \
		&& false); else :; fi
	@echo "Good."

release-verify-sane-tests:
	@echo "Checking that the test suite is sane..."
	@cd test && $(MAKE) $(AM_MAKEFLAGS) release-verify-sane-tests

release-verify-even-micro:
	@echo -n "Checking that $(VERSION) has an even micro component..."
	@test "$(CAIRO_VERSION_MICRO)" = "`echo $(CAIRO_VERSION_MICRO)/2*2 | bc`" \
		|| (echo "Ouch." && echo "The version micro component '$(CAIRO_VERSION_MICRO)' is not an even number." \
		&& echo "The version in configure.in must be incremented before a new release." \
		&& false)
	@echo "Good."

release-verify-newer:
	@echo -n "Checking that no $(VERSION) release already exists..."
	@ssh $(RELEASE_UPLOAD_HOST) test ! -e $(RELEASE_UPLOAD_DIR)/$(tar_file) \
		|| (echo "Ouch." && echo "Found: $(RELEASE_UPLOAD_HOST):$(RELEASE_UPLOAD_DIR)/$(tar_file)" \
		&& echo "Are you sure you have an updated checkout?" \
		&& echo "This should never happen." \
		&& false)
	@echo "Good."

release-remove-old:
	$(RM) $(tar_file) $(sha1_file) $(gpg_file)

# Strict ordering enforced for parallel make to work
release-check: \
	release-verify-even-micro \
	release-verify-sane-changelogs \
	release-verify-sane-tests \
	release-verify-newer \
	$(NULL)
	$(MAKE) $(AM_MAKEFLAGS) release-remove-old
	TAR_OPTIONS="$(TAR_OPTIONS)" $(MAKE) $(AM_MAKEFLAGS) distcheck

release-upload: $(tar_file) $(sha1_file) $(gpg_file)
	mkdir -p releases
	scp $(tar_file) $(sha1_file) $(gpg_file) $(RELEASE_UPLOAD_HOST):$(RELEASE_UPLOAD_DIR)
	mv $(tar_file) $(sha1_file) $(gpg_file) releases
	ssh $(RELEASE_UPLOAD_HOST) "rm -f $(RELEASE_UPLOAD_DIR)/LATEST-$(PACKAGE)-[0-9]* && ln -s $(tar_file) $(RELEASE_UPLOAD_DIR)/LATEST-$(PACKAGE)-$(VERSION)"
	git tag -s  -m "cairo $(CAIRO_VERSION_MAJOR).$(CAIRO_VERSION_MINOR).$(CAIRO_VERSION_MICRO) release" $(CAIRO_VERSION_MAJOR).$(CAIRO_VERSION_MINOR).$(CAIRO_VERSION_MICRO)

release-publish-message: releases/$(sha1_file)
	@echo "Please follow the instructions in RELEASING to push stuff out and"
	@echo "send out the announcement mails.  Here is the excerpt you need:"
	@echo ""
	@echo "Subject: $(PACKAGE) $(RELEASE_OR_SNAPSHOT) $(VERSION) now available"
	@echo ""
	@echo "============================== CUT HERE =============================="
	@echo "A new $(PACKAGE) $(RELEASE_OR_SNAPSHOT) $(VERSION) is now available from:"
	@echo ""
	@echo "	$(RELEASE_URL_BASE)/$(tar_file)"
	@echo ""
	@echo "    which can be verified with:"
	@echo ""
	@echo "	$(RELEASE_URL_BASE)/$(sha1_file)"
	@echo -n "	"
	@cat releases/$(sha1_file)
	@echo ""
	@echo "	$(RELEASE_URL_BASE)/$(gpg_file)"
	@echo "	(signed by `getent passwd "$$USER" | cut -d: -f 5 | cut -d, -f 1`)"
	@echo ""
	@echo "  Additionally, a git clone of the source tree:"
	@echo ""
	@echo "	git clone git://git.cairographics.org/git/cairo"
	@echo ""
	@echo "    will include a signed $(VERSION) tag which points to a commit named:"
	@echo "	`git cat-file tag $(VERSION) | grep ^object | sed -e 's,object ,,'`"
	@echo ""
	@echo "    which can be verified with:"
	@echo "	git verify-tag $(VERSION)"
	@echo ""
	@echo "    and can be checked out with a command such as:"
	@echo "	git checkout -b build $(VERSION)"
	@echo ""
	@echo "============================== CUT HERE =============================="

doc-publish: doc
	rm -rf ./$(MANUAL_DATED)
	cp -a doc/public/html $(MANUAL_DATED)
	tar czf $(MANUAL_TAR_FILE) $(MANUAL_DATED)
	scp $(MANUAL_TAR_FILE) $(RELEASE_UPLOAD_HOST):$(MANUAL_UPLOAD_DIR)
	ssh $(RELEASE_UPLOAD_HOST) "cd $(MANUAL_UPLOAD_DIR) && tar xzf $(MANUAL_TAR_FILE) && rm -f manual && ln -s $(MANUAL_DATED) manual && ln -sf $(MANUAL_TAR_FILE) cairo-manual.tar.gz"

doc-publish-versioned: doc
	rm -rf ./$(MANUAL_VERSIONED)
	cp -a doc/public/html $(MANUAL_VERSIONED)
	tar czf $(MANUAL_VERSIONED_TAR_FILE) $(MANUAL_VERSIONED)
	scp $(MANUAL_VERSIONED_TAR_FILE) $(RELEASE_UPLOAD_HOST):$(MANUAL_UPLOAD_DIR)
	ssh $(RELEASE_UPLOAD_HOST) "cd $(MANUAL_UPLOAD_DIR) && tar xzf $(MANUAL_VERSIONED_TAR_FILE)"

# Strict ordering enforced for parallel make to work
release-publish: release-check
	$(MAKE) $(AM_MAKEFLAGS) release-upload
	$(MAKE) $(AM_MAKEFLAGS) doc-publish-versioned
	$(MAKE) $(AM_MAKEFLAGS) release-publish-message

#$(runtime_zip_file): install
#	-$(RM) $@
#	pwd=`pwd`; cd $(prefix); \
#	zip "$$pwd"/$@ bin/libcairo-$(CAIRO_VERSION_SONUM).dll

#$(developer_zip_file): install
#	-$(RM) $@
#	pwd=`pwd`; cd $(prefix); \
#	zip -r "$$pwd"/$@ include/cairo lib/libcairo.dll.a lib/cairo.lib lib/pkgconfig/cairo.pc lib/pkgconfig/cairo-*.pc share/gtk-doc/html/cairo

#zips: $(runtime_zip_file) $(developer_zip_file)

.PHONY: \
	dist-clear-sticky-bits \
	doc-publish \
	doc-publish-versioned \
	release-check \
	release-publish \
	release-publish-message \
	release-remove-old \
	release-upload \
	release-verify-even-micro \
	release-verify-newer \
	release-verify-sane-changelogs \
	release-verify-sane-tests \
	snapshot \
	snapshot-dist \
	$(NULL)
# use recursive makes in order to ignore errors during check/perf
#lcov:
#	-$(MAKE) $(AM_MAKEFLAGS) check
#	$(MAKE) $(AM_MAKEFLAGS) genlcov
#lcov-perf:
#	-$(MAKE) $(AM_MAKEFLAGS) perf
#	$(MAKE) $(AM_MAKEFLAGS) genlcov

# we have to massage the lcov.info file slightly to hide the effect of libtool
# placing the objects files in the .libs/ directory separate from the *.c
#genlcov:
#	$(LTP) --directory $(top_builddir) --path $(top_builddir) --capture --output-file cairo-lcov.info --test-name CAIRO_TEST --no-checksum
#	$(SED) -e 's#.libs/##' \
#	       -e 's#boilerplate/src#src#' \
#	       -e 's#$(shell pwd)#$(shell cd $(top_srcdir) && pwd)#' \
#	       < cairo-lcov.info > cairo-lcov.info.tmp
#	LANG=C $(LTP_GENHTML) --prefix $(top_builddir) --output-directory cairo-lcov --title "Cairo Code Coverage" --show-details cairo-lcov.info.tmp
#	$(RM) cairo-lcov.info.tmp
lcov lcov-perf genlcov:
	@echo You need to configure Cairo with support for gcov enabled.
	@echo e.g, ./configure --enable-gcov

lcov-clean:
#	-$(LTP) --directory $(top_builddir) -z
	-$(RM) -r cairo-lcov.info cairo-lcov
	-$(FIND) -name '*.gcda' -print | $(XARGS) $(RM)

distclean-local: lcov-clean

.PHONY: lcov lcov-perf genlcov lcov-clean
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
