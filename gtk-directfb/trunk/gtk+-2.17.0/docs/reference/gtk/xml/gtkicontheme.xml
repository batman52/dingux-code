<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd" [
<!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
<!ENTITY version SYSTEM "version.xml">
]>
<!--ENTITY index-Objects-Grouped SYSTEM "objects_grouped.sgml"-->
<refentry id="GtkIconTheme">
<refmeta>
<refentrytitle role="top_of_page" id="GtkIconTheme.top_of_page">GtkIconTheme</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTK Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkIconTheme</refname>
<refpurpose>Looking up icons by name</refpurpose>
</refnamediv>

<refsynopsisdiv id="GtkIconTheme.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtk/gtk.h&gt;

                    <link linkend="GtkIconInfo">GtkIconInfo</link>;
                    <link linkend="GtkIconTheme-struct">GtkIconTheme</link>;
enum                <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link>;
#define             <link linkend="GTK-ICON-THEME-ERROR--CAPS">GTK_ICON_THEME_ERROR</link>
enum                <link linkend="GtkIconThemeError">GtkIconThemeError</link>;
<link linkend="GtkIconTheme">GtkIconTheme</link> *      <link linkend="gtk-icon-theme-new">gtk_icon_theme_new</link>                  (void);
<link linkend="GtkIconTheme">GtkIconTheme</link> *      <link linkend="gtk-icon-theme-get-default">gtk_icon_theme_get_default</link>          (void);
<link linkend="GtkIconTheme">GtkIconTheme</link> *      <link linkend="gtk-icon-theme-get-for-screen">gtk_icon_theme_get_for_screen</link>       (<link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-set-screen">gtk_icon_theme_set_screen</link>           (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GdkScreen">GdkScreen</link> *screen);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-set-search-path">gtk_icon_theme_set_search_path</link>      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path[],
                                                         <link linkend="gint">gint</link> n_elements);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-get-search-path">gtk_icon_theme_get_search_path</link>      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="gchar">gchar</link> **path[],
                                                         <link linkend="gint">gint</link> *n_elements);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-append-search-path">gtk_icon_theme_append_search_path</link>   (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-prepend-search-path">gtk_icon_theme_prepend_search_path</link>  (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-set-custom-theme">gtk_icon_theme_set_custom_theme</link>     (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *theme_name);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-icon-theme-has-icon">gtk_icon_theme_has_icon</link>             (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name);
<link linkend="GtkIconInfo">GtkIconInfo</link> *       <link linkend="gtk-icon-theme-lookup-icon">gtk_icon_theme_lookup_icon</link>          (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);
<link linkend="GtkIconInfo">GtkIconInfo</link> *       <link linkend="gtk-icon-theme-choose-icon">gtk_icon_theme_choose_icon</link>          (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_names[],
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);
<link linkend="GtkIconInfo">GtkIconInfo</link> *       <link linkend="gtk-icon-theme-lookup-by-gicon">gtk_icon_theme_lookup_by_gicon</link>      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GIcon">GIcon</link> *icon,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);
<link linkend="GdkPixbuf">GdkPixbuf</link> *         <link linkend="gtk-icon-theme-load-icon">gtk_icon_theme_load_icon</link>            (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="GList">GList</link> *             <link linkend="gtk-icon-theme-list-contexts">gtk_icon_theme_list_contexts</link>        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);
<link linkend="GList">GList</link> *             <link linkend="gtk-icon-theme-list-icons">gtk_icon_theme_list_icons</link>           (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *context);
<link linkend="gint">gint</link> *              <link linkend="gtk-icon-theme-get-icon-sizes">gtk_icon_theme_get_icon_sizes</link>       (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name);
<link linkend="char">char</link> *              <link linkend="gtk-icon-theme-get-example-icon-name">gtk_icon_theme_get_example_icon_name</link>
                                                        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-icon-theme-rescan-if-needed">gtk_icon_theme_rescan_if_needed</link>     (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);
<link linkend="void">void</link>                <link linkend="gtk-icon-theme-add-builtin-icon">gtk_icon_theme_add_builtin_icon</link>     (const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="GtkIconInfo">GtkIconInfo</link> *       <link linkend="gtk-icon-info-copy">gtk_icon_info_copy</link>                  (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
<link linkend="void">void</link>                <link linkend="gtk-icon-info-free">gtk_icon_info_free</link>                  (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
<link linkend="GtkIconInfo">GtkIconInfo</link> *       <link linkend="gtk-icon-info-new-for-pixbuf">gtk_icon_info_new_for_pixbuf</link>        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);
<link linkend="gint">gint</link>                <link linkend="gtk-icon-info-get-base-size">gtk_icon_info_get_base_size</link>         (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
const <link linkend="gchar">gchar</link> *       <link linkend="gtk-icon-info-get-filename">gtk_icon_info_get_filename</link>          (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
<link linkend="GdkPixbuf">GdkPixbuf</link> *         <link linkend="gtk-icon-info-get-builtin-pixbuf">gtk_icon_info_get_builtin_pixbuf</link>    (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
<link linkend="GdkPixbuf">GdkPixbuf</link> *         <link linkend="gtk-icon-info-load-icon">gtk_icon_info_load_icon</link>             (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="void">void</link>                <link linkend="gtk-icon-info-set-raw-coordinates">gtk_icon_info_set_raw_coordinates</link>   (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="gboolean">gboolean</link> raw_coordinates);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-icon-info-get-embedded-rect">gtk_icon_info_get_embedded_rect</link>     (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *rectangle);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-icon-info-get-attach-points">gtk_icon_info_get_attach_points</link>     (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GdkPoint">GdkPoint</link> **points,
                                                         <link linkend="gint">gint</link> *n_points);
const <link linkend="gchar">gchar</link> *       <link linkend="gtk-icon-info-get-display-name">gtk_icon_info_get_display_name</link>      (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);
</synopsis>
</refsynopsisdiv>

<refsect1 id="GtkIconTheme.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>
  <link linkend="GObject">GObject</link>
   +----GtkIconTheme
</synopsis>
</refsect1>






<refsect1 id="GtkIconTheme.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>
  &quot;<link linkend="GtkIconTheme-changed">changed</link>&quot;                                        : Run Last
</synopsis>
</refsect1>


<refsect1 id="GtkIconTheme.description" role="desc">
<title role="desc.title">Description</title>
<para>
<link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> provides a facility for looking up icons by name
and size. The main reason for using a name rather than simply
providing a filename is to allow different icons to be used
depending on what <firstterm>icon theme</firstterm> is selecetd
by the user. The operation of icon themes on Linux and Unix
follows the <ulink
url="http://www.freedesktop.org/Standards/icon-theme-spec">Icon
Theme Specification</ulink>. There is a default icon theme,
named <literal>hicolor</literal> where applications should install
their icons, but more additional application themes can be
installed as operating system vendors and users choose.
</para>
<para>
Named icons are similar to the <xref linkend="gtk-Themeable-Stock-Images"/>
facility, and the distinction between the two may be a bit confusing.
A few things to keep in mind:
</para>
<itemizedlist>
<listitem>
<para>
Stock images usually are used in conjunction with
<xref linkend="gtk-Stock-Items"/>., such as <link linkend="GTK-STOCK-OK--CAPS"><literal>GTK_STOCK_OK</literal></link> or
<link linkend="GTK-STOCK-OPEN--CAPS"><literal>GTK_STOCK_OPEN</literal></link>. Named icons are easier to set up and therefore
are more useful for new icons that an application wants to
add, such as application icons or window icons.
</para>
</listitem>
<listitem>
<para>
Stock images can only be loaded at the symbolic sizes defined
by the <link linkend="GtkIconSize"><type>GtkIconSize</type></link> enumeration, or by custom sizes defined
by <link linkend="gtk-icon-size-register"><function>gtk_icon_size_register()</function></link>, while named icons are more flexible
and any pixel size can be specified.
</para>
</listitem>
<listitem>
<para>
Because stock images are closely tied to stock items, and thus
to actions in the user interface, stock images may come in
multiple variants for different widget states or writing
directions.
</para>
</listitem>
</itemizedlist>
<para>
A good rule of thumb is that if there is a stock image for what
you want to use, use it, otherwise use a named icon. It turns
out that internally stock images are generally defined in
terms of one or more named icons. (An example of the
more than one case is icons that depend on writing direction;
GTK_STOCK_GO_FORWARD uses the two themed icons
"gtk-stock-go-forward-ltr" and "gtk-stock-go-forward-rtl".)
</para>
<para>
In many cases, named themes are used indirectly, via <link linkend="GtkImage"><type>GtkImage</type></link>
or stock items, rather than directly, but looking up icons
directly is also simple. The <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> object acts
as a database of all the icons in the current theme. You
can create new <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> objects, but its much more
efficient to use the standard icon theme for the <link linkend="GdkScreen"><type>GdkScreen</type></link>
so that the icon information is shared with other people
looking up icons. In the case where the default screen is
being used, looking up an icon can be as simple as:
</para>
<informalexample>
<programlisting>
GError *error = NULL;
GtkIconTheme *icon_theme;
GdkPixbuf *pixbuf;
icon_theme = gtk_icon_theme_get_default ();
pixbuf = gtk_icon_theme_load_icon (icon_theme,
                                   "my-icon-name", /* icon name */
                                   48, /* size */
                                   0,  /* flags */
                                   &amp;error);
if (!pixbuf)
  {
    g_warning ("Couldn't load icon: &percnt;s", error-&gt;message);
    g_error_free (error);
  }
else
  {
    /* Use the pixbuf */
    g_object_unref (pixbuf);
  }
</programlisting>
</informalexample>
</refsect1>

<refsect1 id="GtkIconTheme.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="GtkIconInfo" role="struct">
<title>GtkIconInfo</title>
<indexterm zone="GtkIconInfo"><primary sortas="IconInfo">GtkIconInfo</primary></indexterm><programlisting>typedef struct _GtkIconInfo GtkIconInfo;</programlisting>
<para>
Contains information found when looking up an icon in
an icon theme.
</para></refsect2>
<refsect2 id="GtkIconTheme-struct" role="struct">
<title>GtkIconTheme</title>
<indexterm zone="GtkIconTheme-struct"><primary sortas="IconTheme">GtkIconTheme</primary></indexterm><programlisting>typedef struct _GtkIconTheme GtkIconTheme;</programlisting>
<para>
Acts as a database of information about an icon theme.
Normally, you retrieve the icon theme for a particular
screen using <link linkend="gtk-icon-theme-get-for-screen"><function>gtk_icon_theme_get_for_screen()</function></link> and it
will contain information about current icon theme for
that screen, but you can also create a new <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
object and set the icon theme name explicitely using
<link linkend="gtk-icon-theme-set-custom-theme"><function>gtk_icon_theme_set_custom_theme()</function></link>.
</para></refsect2>
<refsect2 id="GtkIconLookupFlags" role="enum">
<title>enum GtkIconLookupFlags</title>
<indexterm zone="GtkIconLookupFlags"><primary sortas="IconLookupFlags">GtkIconLookupFlags</primary></indexterm><programlisting>typedef enum
{
  GTK_ICON_LOOKUP_NO_SVG           = 1 &lt;&lt; 0,
  GTK_ICON_LOOKUP_FORCE_SVG        = 1 &lt;&lt; 1,
  GTK_ICON_LOOKUP_USE_BUILTIN      = 1 &lt;&lt; 2,
  GTK_ICON_LOOKUP_GENERIC_FALLBACK = 1 &lt;&lt; 3,
  GTK_ICON_LOOKUP_FORCE_SIZE       = 1 &lt;&lt; 4
} GtkIconLookupFlags;
</programlisting>
<para>
Used to specify options for <link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link></para>
<para>
</para><variablelist role="enum">
<varlistentry id="GTK-ICON-LOOKUP-NO-SVG--CAPS" role="constant">
<term><literal>GTK_ICON_LOOKUP_NO_SVG</literal></term>
<listitem><simpara> Never return SVG icons, even if gdk-pixbuf
  supports them. Cannot be used together with <link linkend="GTK-ICON-LOOKUP-FORCE-SVG--CAPS"><literal>GTK_ICON_LOOKUP_FORCE_SVG</literal></link>.
</simpara></listitem>
</varlistentry>
<varlistentry id="GTK-ICON-LOOKUP-FORCE-SVG--CAPS" role="constant">
<term><literal>GTK_ICON_LOOKUP_FORCE_SVG</literal></term>
<listitem><simpara> Return SVG icons, even if gdk-pixbuf
  doesn't support them.
  Cannot be used together with <link linkend="GTK-ICON-LOOKUP-NO-SVG--CAPS"><literal>GTK_ICON_LOOKUP_NO_SVG</literal></link>.
</simpara></listitem>
</varlistentry>
<varlistentry id="GTK-ICON-LOOKUP-USE-BUILTIN--CAPS" role="constant">
<term><literal>GTK_ICON_LOOKUP_USE_BUILTIN</literal></term>
<listitem><simpara> When passed to
  <link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link> includes builtin icons
  as well as files. For a builtin icon, <link linkend="gtk-icon-info-get-filename"><function>gtk_icon_info_get_filename()</function></link>
  returns <link linkend="NULL--CAPS"><literal>NULL</literal></link> and you need to call <link linkend="gtk-icon-info-get-builtin-pixbuf"><function>gtk_icon_info_get_builtin_pixbuf()</function></link>.
</simpara></listitem>
</varlistentry>
<varlistentry id="GTK-ICON-LOOKUP-GENERIC-FALLBACK--CAPS" role="constant">
<term><literal>GTK_ICON_LOOKUP_GENERIC_FALLBACK</literal></term>
<listitem><simpara> Try to shorten icon name at '-'
  characters before looking at inherited themes. For more general
  fallback, see <link linkend="gtk-icon-theme-choose-icon"><function>gtk_icon_theme_choose_icon()</function></link>. Since 2.12.
</simpara></listitem>
</varlistentry>
<varlistentry id="GTK-ICON-LOOKUP-FORCE-SIZE--CAPS" role="constant">
<term><literal>GTK_ICON_LOOKUP_FORCE_SIZE</literal></term>
<listitem><simpara> Always return the icon scaled to the
  requested size. Since 2.14.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="GTK-ICON-THEME-ERROR--CAPS" role="macro">
<title>GTK_ICON_THEME_ERROR</title>
<indexterm zone="GTK-ICON-THEME-ERROR--CAPS"><primary sortas="ICON_THEME_ERROR">GTK_ICON_THEME_ERROR</primary></indexterm><programlisting>#define GTK_ICON_THEME_ERROR gtk_icon_theme_error_quark ()
</programlisting>
<para>
The <link linkend="GQuark"><type>GQuark</type></link> used for <link linkend="GtkIconThemeError"><type>GtkIconThemeError</type></link> errors.
</para></refsect2>
<refsect2 id="GtkIconThemeError" role="enum">
<title>enum GtkIconThemeError</title>
<indexterm zone="GtkIconThemeError"><primary sortas="IconThemeError">GtkIconThemeError</primary></indexterm><programlisting>typedef enum {
  GTK_ICON_THEME_NOT_FOUND,
  GTK_ICON_THEME_FAILED
} GtkIconThemeError;
</programlisting>
<para>
Error codes for GtkIconTheme operations.</para>
<para>
</para><variablelist role="enum">
<varlistentry id="GTK-ICON-THEME-NOT-FOUND--CAPS" role="constant">
<term><literal>GTK_ICON_THEME_NOT_FOUND</literal></term>
<listitem><simpara> The icon specified does not exist in the theme
</simpara></listitem>
</varlistentry>
<varlistentry id="GTK-ICON-THEME-FAILED--CAPS" role="constant">
<term><literal>GTK_ICON_THEME_FAILED</literal></term>
<listitem><simpara> An unspecified error occurred.
</simpara></listitem>
</varlistentry>
</variablelist></refsect2>
<refsect2 id="gtk-icon-theme-new" role="function" condition="since:2.4">
<title>gtk_icon_theme_new ()</title>
<indexterm zone="gtk-icon-theme-new" role="2.4"><primary sortas="icon_theme_new">gtk_icon_theme_new</primary></indexterm><programlisting><link linkend="GtkIconTheme">GtkIconTheme</link> *      gtk_icon_theme_new                  (void);</programlisting>
<para>
Creates a new icon theme object. Icon theme objects are used
to lookup up an icon by name in a particular icon theme.
Usually, you'll want to use <link linkend="gtk-icon-theme-get-default"><function>gtk_icon_theme_get_default()</function></link>
or <link linkend="gtk-icon-theme-get-for-screen"><function>gtk_icon_theme_get_for_screen()</function></link> rather than creating
a new icon theme object for scratch.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the newly created <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> object.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-get-default" role="function" condition="since:2.4">
<title>gtk_icon_theme_get_default ()</title>
<indexterm zone="gtk-icon-theme-get-default" role="2.4"><primary sortas="icon_theme_get_default">gtk_icon_theme_get_default</primary></indexterm><programlisting><link linkend="GtkIconTheme">GtkIconTheme</link> *      gtk_icon_theme_get_default          (void);</programlisting>
<para>
Gets the icon theme for the default screen. See
<link linkend="gtk-icon-theme-get-for-screen"><function>gtk_icon_theme_get_for_screen()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A unique <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> associated with
 the default screen. This icon theme is associated with
 the screen and can be used as long as the screen
 is open. Do not ref or unref it.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-get-for-screen" role="function" condition="since:2.4">
<title>gtk_icon_theme_get_for_screen ()</title>
<indexterm zone="gtk-icon-theme-get-for-screen" role="2.4"><primary sortas="icon_theme_get_for_screen">gtk_icon_theme_get_for_screen</primary></indexterm><programlisting><link linkend="GtkIconTheme">GtkIconTheme</link> *      gtk_icon_theme_get_for_screen       (<link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Gets the icon theme object associated with <parameter>screen</parameter>; if this
function has not previously been called for the given
screen, a new icon theme object will be created and
associated with the screen. Icon theme objects are
fairly expensive to create, so using this function
is usually a better choice than calling than <link linkend="gtk-icon-theme-new"><function>gtk_icon_theme_new()</function></link>
and setting the screen yourself; by using this function
a single icon theme object will be shared between users.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>screen</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GdkScreen"><type>GdkScreen</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> A unique <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> associated with
 the given screen. This icon theme is associated with
 the screen and can be used as long as the screen
 is open. Do not ref or unref it.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-set-screen" role="function" condition="since:2.4">
<title>gtk_icon_theme_set_screen ()</title>
<indexterm zone="gtk-icon-theme-set-screen" role="2.4"><primary sortas="icon_theme_set_screen">gtk_icon_theme_set_screen</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_set_screen           (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GdkScreen">GdkScreen</link> *screen);</programlisting>
<para>
Sets the screen for an icon theme; the screen is used
to track the user's currently configured icon theme,
which might be different for different screens.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>screen</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GdkScreen"><type>GdkScreen</type></link>
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-set-search-path" role="function" condition="since:2.4">
<title>gtk_icon_theme_set_search_path ()</title>
<indexterm zone="gtk-icon-theme-set-search-path" role="2.4"><primary sortas="icon_theme_set_search_path">gtk_icon_theme_set_search_path</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_set_search_path      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path[],
                                                         <link linkend="gint">gint</link> n_elements);</programlisting>
<para>
Sets the search path for the icon theme object. When looking
for an icon theme, GTK+ will search for a subdirectory of
one or more of the directories in <parameter>path</parameter> with the same name
as the icon theme. (Themes from multiple of the path elements
are combined to allow themes to be extended by adding icons
in the user's home directory.)
</para>
<para>
In addition if an icon found isn't found either in the current
icon theme or the default icon theme, and an image file with
the right name is found directly in one of the elements of
<parameter>path</parameter>, then that image will be used for the icon name.
(This is legacy feature, and new icons should be put
into the default icon theme, which is called DEFAULT_THEME_NAME,
rather than directly on the icon path.)</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> array of directories that are searched for icon themes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_elements</parameter>&#160;:</term>
<listitem><simpara> number of elements in <parameter>path</parameter>.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-get-search-path" role="function" condition="since:2.4">
<title>gtk_icon_theme_get_search_path ()</title>
<indexterm zone="gtk-icon-theme-get-search-path" role="2.4"><primary sortas="icon_theme_get_search_path">gtk_icon_theme_get_search_path</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_get_search_path      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="gchar">gchar</link> **path[],
                                                         <link linkend="gint">gint</link> *n_elements);</programlisting>
<para>
Gets the current search path. See <link linkend="gtk-icon-theme-set-search-path"><function>gtk_icon_theme_set_search_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> location to store a list of icon theme path directories or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
       The stored value should be freed with <link linkend="g-strfreev"><function>g_strfreev()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_elements</parameter>&#160;:</term>
<listitem><simpara> location to store number of elements
             in <parameter>path</parameter>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-append-search-path" role="function" condition="since:2.4">
<title>gtk_icon_theme_append_search_path ()</title>
<indexterm zone="gtk-icon-theme-append-search-path" role="2.4"><primary sortas="icon_theme_append_search_path">gtk_icon_theme_append_search_path</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_append_search_path   (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
Appends a directory to the search path. 
See <link linkend="gtk-icon-theme-set-search-path"><function>gtk_icon_theme_set_search_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> directory name to append to the icon path
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-prepend-search-path" role="function" condition="since:2.4">
<title>gtk_icon_theme_prepend_search_path ()</title>
<indexterm zone="gtk-icon-theme-prepend-search-path" role="2.4"><primary sortas="icon_theme_prepend_search_path">gtk_icon_theme_prepend_search_path</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_prepend_search_path  (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *path);</programlisting>
<para>
Prepends a directory to the search path. 
See <link linkend="gtk-icon-theme-set-search-path"><function>gtk_icon_theme_set_search_path()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>path</parameter>&#160;:</term>
<listitem><simpara> directory name to prepend to the icon path
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-set-custom-theme" role="function" condition="since:2.4">
<title>gtk_icon_theme_set_custom_theme ()</title>
<indexterm zone="gtk-icon-theme-set-custom-theme" role="2.4"><primary sortas="icon_theme_set_custom_theme">gtk_icon_theme_set_custom_theme</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_set_custom_theme     (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *theme_name);</programlisting>
<para>
Sets the name of the icon theme that the <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link> object uses
overriding system configuration. This function cannot be called
on the icon theme objects returned from <link linkend="gtk-icon-theme-get-default"><function>gtk_icon_theme_get_default()</function></link>
and <link linkend="gtk-icon-theme-get-for-screen"><function>gtk_icon_theme_get_for_screen()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>theme_name</parameter>&#160;:</term>
<listitem><simpara> name of icon theme to use instead of configured theme,
  or <link linkend="NULL--CAPS"><literal>NULL</literal></link> to unset a previously set custom theme
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-has-icon" role="function" condition="since:2.4">
<title>gtk_icon_theme_has_icon ()</title>
<indexterm zone="gtk-icon-theme-has-icon" role="2.4"><primary sortas="icon_theme_has_icon">gtk_icon_theme_has_icon</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_icon_theme_has_icon             (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name);</programlisting>
<para>
Checks whether an icon theme includes an icon
for a particular name.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&#160;:</term>
<listitem><simpara> the name of an icon
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if <parameter>icon_theme</parameter> includes an
 icon for <parameter>icon_name</parameter>.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-lookup-icon" role="function" condition="since:2.4">
<title>gtk_icon_theme_lookup_icon ()</title>
<indexterm zone="gtk-icon-theme-lookup-icon" role="2.4"><primary sortas="icon_theme_lookup_icon">gtk_icon_theme_lookup_icon</primary></indexterm><programlisting><link linkend="GtkIconInfo">GtkIconInfo</link> *       gtk_icon_theme_lookup_icon          (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);</programlisting>
<para>
Looks up a named icon and returns a structure containing
information such as the filename of the icon. The icon
can then be rendered into a pixbuf using
<link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>. (<link linkend="gtk-icon-theme-load-icon"><function>gtk_icon_theme_load_icon()</function></link>
combines these two steps if all you need is the pixbuf.)</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&#160;:</term>
<listitem><simpara> the name of the icon to lookup
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> desired icon size
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> flags modifying the behavior of the icon lookup
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> structure containing information
about the icon, or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the icon wasn't found. Free with
<link linkend="gtk-icon-info-free"><function>gtk_icon_info_free()</function></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-choose-icon" role="function" condition="since:2.12">
<title>gtk_icon_theme_choose_icon ()</title>
<indexterm zone="gtk-icon-theme-choose-icon" role="2.12"><primary sortas="icon_theme_choose_icon">gtk_icon_theme_choose_icon</primary></indexterm><programlisting><link linkend="GtkIconInfo">GtkIconInfo</link> *       gtk_icon_theme_choose_icon          (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_names[],
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);</programlisting>
<para>
Looks up a named icon and returns a structure containing
information such as the filename of the icon. The icon
can then be rendered into a pixbuf using
<link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>. (<link linkend="gtk-icon-theme-load-icon"><function>gtk_icon_theme_load_icon()</function></link>
combines these two steps if all you need is the pixbuf.)
</para>
<para>
If <parameter>icon_names</parameter> contains more than one name, this function 
tries them all in the given order before falling back to 
inherited icon themes.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_names</parameter>&#160;:</term>
<listitem><simpara> <link linkend="NULL--CAPS"><literal>NULL</literal></link>-terminated array of icon names to lookup
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> desired icon size
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> flags modifying the behavior of the icon lookup
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> structure containing information
about the icon, or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the icon wasn't found. Free with
<link linkend="gtk-icon-info-free"><function>gtk_icon_info_free()</function></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.12</para></refsect2>
<refsect2 id="gtk-icon-theme-lookup-by-gicon" role="function" condition="since:2.14">
<title>gtk_icon_theme_lookup_by_gicon ()</title>
<indexterm zone="gtk-icon-theme-lookup-by-gicon" role="2.14"><primary sortas="icon_theme_lookup_by_gicon">gtk_icon_theme_lookup_by_gicon</primary></indexterm><programlisting><link linkend="GtkIconInfo">GtkIconInfo</link> *       gtk_icon_theme_lookup_by_gicon      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GIcon">GIcon</link> *icon,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags);</programlisting>
<para>
Looks up an icon and returns a structure containing
information such as the filename of the icon. 
The icon can then be rendered into a pixbuf using
<link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon</parameter>&#160;:</term>
<listitem><simpara> the <link linkend="GIcon"><type>GIcon</type></link> to look up
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> desired icon size
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> flags modifying the behavior of the icon lookup
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> structure containing 
    information about the icon, or <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the icon 
    wasn't found. Free with <link linkend="gtk-icon-info-free"><function>gtk_icon_info_free()</function></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.14</para></refsect2>
<refsect2 id="gtk-icon-theme-load-icon" role="function" condition="since:2.4">
<title>gtk_icon_theme_load_icon ()</title>
<indexterm zone="gtk-icon-theme-load-icon" role="2.4"><primary sortas="icon_theme_load_icon">gtk_icon_theme_load_icon</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link> *         gtk_icon_theme_load_icon            (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GtkIconLookupFlags">GtkIconLookupFlags</link> flags,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Looks up an icon in an icon theme, scales it to the given size
and renders it into a pixbuf. This is a convenience function;
if more details about the icon are needed, use
<link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link> followed by <link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>.
</para>
<para>
Note that you probably want to listen for icon theme changes and
update the icon. This is usually done by connecting to the 
GtkWidget::style-set signal. If for some reason you do not want to
update the icon when the icon theme changes, you should consider
using <link linkend="gdk-pixbuf-copy"><function>gdk_pixbuf_copy()</function></link> to make a private copy of the pixbuf
returned by this function. Otherwise GTK+ may need to keep the old 
icon theme loaded, which would be a waste of memory.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&#160;:</term>
<listitem><simpara> the name of the icon to lookup
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> the desired icon size. The resulting icon may not be
       exactly this size; see <link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>flags</parameter>&#160;:</term>
<listitem><simpara> flags modifying the behavior of the icon lookup
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> Location to store error information on failure, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the rendered icon; this may be a newly created icon
 or a new reference to an internal icon, so you must not modify
 the icon. Use <link linkend="g-object-unref"><function>g_object_unref()</function></link> to release your reference to the
 icon. <link linkend="NULL--CAPS"><literal>NULL</literal></link> if the icon isn't found.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-list-contexts" role="function" condition="since:2.12">
<title>gtk_icon_theme_list_contexts ()</title>
<indexterm zone="gtk-icon-theme-list-contexts" role="2.12"><primary sortas="icon_theme_list_contexts">gtk_icon_theme_list_contexts</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gtk_icon_theme_list_contexts        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);</programlisting>
<para>
Gets the list of contexts available within the current
hierarchy of icon themes</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> list holding the names of all the
 contexts in the theme. You must first free each element
 in the list with <link linkend="g-free"><function>g_free()</function></link>, then free the list itself
 with <link linkend="g-list-free"><function>g_list_free()</function></link>.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.12</para></refsect2>
<refsect2 id="gtk-icon-theme-list-icons" role="function" condition="since:2.4">
<title>gtk_icon_theme_list_icons ()</title>
<indexterm zone="gtk-icon-theme-list-icons" role="2.4"><primary sortas="icon_theme_list_icons">gtk_icon_theme_list_icons</primary></indexterm><programlisting><link linkend="GList">GList</link> *             gtk_icon_theme_list_icons           (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *context);</programlisting>
<para>
Lists the icons in the current icon theme. Only a subset
of the icons can be listed by providing a context string.
The set of values for the context string is system dependent,
but will typically include such values as "Applications" and
"MimeTypes".</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>context</parameter>&#160;:</term>
<listitem><simpara> a string identifying a particular type of icon,
          or <link linkend="NULL--CAPS"><literal>NULL</literal></link> to list all icons.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GList"><type>GList</type></link> list holding the names of all the
 icons in the theme. You must first free each element
 in the list with <link linkend="g-free"><function>g_free()</function></link>, then free the list itself
 with <link linkend="g-list-free"><function>g_list_free()</function></link>.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-get-icon-sizes" role="function" condition="since:2.6">
<title>gtk_icon_theme_get_icon_sizes ()</title>
<indexterm zone="gtk-icon-theme-get-icon-sizes" role="2.6"><primary sortas="icon_theme_get_icon_sizes">gtk_icon_theme_get_icon_sizes</primary></indexterm><programlisting><link linkend="gint">gint</link> *              gtk_icon_theme_get_icon_sizes       (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         const <link linkend="gchar">gchar</link> *icon_name);</programlisting>
<para>
Returns an array of integers describing the sizes at which
the icon is available without scaling. A size of -1 means 
that the icon is available in a scalable format. The array 
is zero-terminated.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>icon_name</parameter>&#160;:</term>
<listitem><simpara> the name of an icon
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> An newly allocated array describing the sizes at
which the icon is available. The array should be freed with <link linkend="g-free"><function>g_free()</function></link>
when it is no longer needed.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.6</para></refsect2>
<refsect2 id="gtk-icon-theme-get-example-icon-name" role="function" condition="since:2.4">
<title>gtk_icon_theme_get_example_icon_name ()</title>
<indexterm zone="gtk-icon-theme-get-example-icon-name" role="2.4"><primary sortas="icon_theme_get_example_icon_name">gtk_icon_theme_get_example_icon_name</primary></indexterm><programlisting><link linkend="char">char</link> *              gtk_icon_theme_get_example_icon_name
                                                        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);</programlisting>
<para>
Gets the name of an icon that is representative of the
current theme (for instance, to use when presenting
a list of themes to the user.)</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the name of an example icon or <link linkend="NULL--CAPS"><literal>NULL</literal></link>.
 Free with <link linkend="g-free"><function>g_free()</function></link>.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-rescan-if-needed" role="function" condition="since:2.4">
<title>gtk_icon_theme_rescan_if_needed ()</title>
<indexterm zone="gtk-icon-theme-rescan-if-needed" role="2.4"><primary sortas="icon_theme_rescan_if_needed">gtk_icon_theme_rescan_if_needed</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_icon_theme_rescan_if_needed     (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme);</programlisting>
<para>
Checks to see if the icon theme has changed; if it has, any
currently cached information is discarded and will be reloaded
next time <parameter>icon_theme</parameter> is accessed.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the icon theme has changed and needed
  to be reloaded.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-theme-add-builtin-icon" role="function" condition="since:2.4">
<title>gtk_icon_theme_add_builtin_icon ()</title>
<indexterm zone="gtk-icon-theme-add-builtin-icon" role="2.4"><primary sortas="icon_theme_add_builtin_icon">gtk_icon_theme_add_builtin_icon</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_theme_add_builtin_icon     (const <link linkend="gchar">gchar</link> *icon_name,
                                                         <link linkend="gint">gint</link> size,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
Registers a built-in icon for icon theme lookups. The idea
of built-in icons is to allow an application or library
that uses themed icons to function requiring files to
be present in the file system. For instance, the default
images for all of GTK+'s stock icons are registered
as built-icons.
</para>
<para>
In general, if you use <link linkend="gtk-icon-theme-add-builtin-icon"><function>gtk_icon_theme_add_builtin_icon()</function></link>
you should also install the icon in the icon theme, so
that the icon is generally available.
</para>
<para>
This function will generally be used with pixbufs loaded
via <link linkend="gdk-pixbuf-new-from-inline"><function>gdk_pixbuf_new_from_inline()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_name</parameter>&#160;:</term>
<listitem><simpara> the name of the icon to register
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size</parameter>&#160;:</term>
<listitem><simpara> the size at which to register the icon (different
       images can be registered for the same icon name
       at different sizes.)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&#160;:</term>
<listitem><simpara> <link linkend="GdkPixbuf"><type>GdkPixbuf</type></link> that contains the image to use
         for <parameter>icon_name</parameter>.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-copy" role="function" condition="since:2.4">
<title>gtk_icon_info_copy ()</title>
<indexterm zone="gtk-icon-info-copy" role="2.4"><primary sortas="icon_info_copy">gtk_icon_info_copy</primary></indexterm><programlisting><link linkend="GtkIconInfo">GtkIconInfo</link> *       gtk_icon_info_copy                  (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Make a copy of a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the new GtkIconInfo

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-free" role="function" condition="since:2.4">
<title>gtk_icon_info_free ()</title>
<indexterm zone="gtk-icon-info-free" role="2.4"><primary sortas="icon_info_free">gtk_icon_info_free</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_info_free                  (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Free a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> and associated information</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-new-for-pixbuf" role="function" condition="since:2.14">
<title>gtk_icon_info_new_for_pixbuf ()</title>
<indexterm zone="gtk-icon-info-new-for-pixbuf" role="2.14"><primary sortas="icon_info_new_for_pixbuf">gtk_icon_info_new_for_pixbuf</primary></indexterm><programlisting><link linkend="GtkIconInfo">GtkIconInfo</link> *       gtk_icon_info_new_for_pixbuf        (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                         <link linkend="GdkPixbuf">GdkPixbuf</link> *pixbuf);</programlisting>
<para>
Creates a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> for a <link linkend="GtkPixbuf"><type>GtkPixbuf</type></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconTheme"><type>GtkIconTheme</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>pixbuf</parameter>&#160;:</term>
<listitem><simpara> the pixbuf to wrap in a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.14</para></refsect2>
<refsect2 id="gtk-icon-info-get-base-size" role="function" condition="since:2.4">
<title>gtk_icon_info_get_base_size ()</title>
<indexterm zone="gtk-icon-info-get-base-size" role="2.4"><primary sortas="icon_info_get_base_size">gtk_icon_info_get_base_size</primary></indexterm><programlisting><link linkend="gint">gint</link>                gtk_icon_info_get_base_size         (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Gets the base size for the icon. The base size
is a size for the icon that was specified by
the icon theme creator. This may be different
than the actual size of image; an example of
this is small emblem icons that can be attached
to a larger icon. These icons will be given
the same base size as the larger icons to which
they are attached.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the base size, or 0, if no base
 size is known for the icon.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-get-filename" role="function" condition="since:2.4">
<title>gtk_icon_info_get_filename ()</title>
<indexterm zone="gtk-icon-info-get-filename" role="2.4"><primary sortas="icon_info_get_filename">gtk_icon_info_get_filename</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gtk_icon_info_get_filename          (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Gets the filename for the icon. If the
<link linkend="GTK-ICON-LOOKUP-USE-BUILTIN--CAPS"><literal>GTK_ICON_LOOKUP_USE_BUILTIN</literal></link> flag was passed
to <link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link>, there may be
no filename if a builtin icon is returned; in this
case, you should use <link linkend="gtk-icon-info-get-builtin-pixbuf"><function>gtk_icon_info_get_builtin_pixbuf()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the filename for the icon, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
 if <link linkend="gtk-icon-info-get-builtin-pixbuf"><function>gtk_icon_info_get_builtin_pixbuf()</function></link> should
 be used instead. The return value is owned by
 GTK+ and should not be modified or freed.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-get-builtin-pixbuf" role="function" condition="since:2.4">
<title>gtk_icon_info_get_builtin_pixbuf ()</title>
<indexterm zone="gtk-icon-info-get-builtin-pixbuf" role="2.4"><primary sortas="icon_info_get_builtin_pixbuf">gtk_icon_info_get_builtin_pixbuf</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link> *         gtk_icon_info_get_builtin_pixbuf    (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Gets the built-in image for this icon, if any. To allow
GTK+ to use built in icon images, you must pass the
<link linkend="GTK-ICON-LOOKUP-USE-BUILTIN--CAPS"><literal>GTK_ICON_LOOKUP_USE_BUILTIN</literal></link> to
<link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link>.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> structure
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the built-in image pixbuf, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>. No
 extra reference is added to the returned pixbuf, so if
 you want to keep it around, you must use <link linkend="g-object-ref"><function>g_object_ref()</function></link>.
 The returned image must not be modified.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-load-icon" role="function" condition="since:2.4">
<title>gtk_icon_info_load_icon ()</title>
<indexterm zone="gtk-icon-info-load-icon" role="2.4"><primary sortas="icon_info_load_icon">gtk_icon_info_load_icon</primary></indexterm><programlisting><link linkend="GdkPixbuf">GdkPixbuf</link> *         gtk_icon_info_load_icon             (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Renders an icon previously looked up in an icon theme using
<link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link>; the size will be based on the size
passed to <link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link>. Note that the resulting
pixbuf may not be exactly this size; an icon theme may have icons
that differ slightly from their nominal sizes, and in addition GTK+
will avoid scaling icons that it considers sufficiently close to the
requested size or for which the source image would have to be scaled
up too far. (This maintains sharpness.). This behaviour can be changed
by passing the <link linkend="GTK-ICON-LOOKUP-FORCE-SIZE--CAPS"><literal>GTK_ICON_LOOKUP_FORCE_SIZE</literal></link> flag when obtaining
the <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>. If this flag has been specified, the pixbuf
returned by this function will be scaled to the exact size.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link> structure from <link linkend="gtk-icon-theme-lookup-icon"><function>gtk_icon_theme_lookup_icon()</function></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&#160;:</term>
<listitem><simpara> location to store error information on failure, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the rendered icon; this may be a newly created icon
 or a new reference to an internal icon, so you must not modify
 the icon. Use <link linkend="g-object-unref"><function>g_object_unref()</function></link> to release your reference to the
 icon.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-set-raw-coordinates" role="function" condition="since:2.4">
<title>gtk_icon_info_set_raw_coordinates ()</title>
<indexterm zone="gtk-icon-info-set-raw-coordinates" role="2.4"><primary sortas="icon_info_set_raw_coordinates">gtk_icon_info_set_raw_coordinates</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_icon_info_set_raw_coordinates   (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="gboolean">gboolean</link> raw_coordinates);</programlisting>
<para>
Sets whether the coordinates returned by <link linkend="gtk-icon-info-get-embedded-rect"><function>gtk_icon_info_get_embedded_rect()</function></link>
and <link linkend="gtk-icon-info-get-attach-points"><function>gtk_icon_info_get_attach_points()</function></link> should be returned in their
original form as specified in the icon theme, instead of scaled
appropriately for the pixbuf returned by <link linkend="gtk-icon-info-load-icon"><function>gtk_icon_info_load_icon()</function></link>.
</para>
<para>
Raw coordinates are somewhat strange; they are specified to be with
respect to the unscaled pixmap for PNG and XPM icons, but for SVG
icons, they are in a 1000x1000 coordinate space that is scaled
to the final size of the icon.  You can determine if the icon is an SVG
icon by using <link linkend="gtk-icon-info-get-filename"><function>gtk_icon_info_get_filename()</function></link>, and seeing if it is non-<link linkend="NULL--CAPS"><literal>NULL</literal></link>
and ends in '.svg'.
</para>
<para>
This function is provided primarily to allow compatibility wrappers
for older API's, and is not expected to be useful for applications.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>raw_coordinates</parameter>&#160;:</term>
<listitem><simpara> whether the coordinates of embedded rectangles
  and attached points should be returned in their original
  (unscaled) form.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-get-embedded-rect" role="function" condition="since:2.4">
<title>gtk_icon_info_get_embedded_rect ()</title>
<indexterm zone="gtk-icon-info-get-embedded-rect" role="2.4"><primary sortas="icon_info_get_embedded_rect">gtk_icon_info_get_embedded_rect</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_icon_info_get_embedded_rect     (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GdkRectangle">GdkRectangle</link> *rectangle);</programlisting>
<para>
Gets the coordinates of a rectangle within the icon
that can be used for display of information such
as a preview of the contents of a text file.
See <link linkend="gtk-icon-info-set-raw-coordinates"><function>gtk_icon_info_set_raw_coordinates()</function></link> for further
information about the coordinate system.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>rectangle</parameter>&#160;:</term>
<listitem><simpara> <link linkend="GdkRectangle"><type>GdkRectangle</type></link> in which to store embedded
  rectangle coordinates; coordinates are only stored
  when this function returns <link linkend="TRUE--CAPS"><literal>TRUE</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if the icon has an embedded rectangle

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-get-attach-points" role="function" condition="since:2.4">
<title>gtk_icon_info_get_attach_points ()</title>
<indexterm zone="gtk-icon-info-get-attach-points" role="2.4"><primary sortas="icon_info_get_attach_points">gtk_icon_info_get_attach_points</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_icon_info_get_attach_points     (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info,
                                                         <link linkend="GdkPoint">GdkPoint</link> **points,
                                                         <link linkend="gint">gint</link> *n_points);</programlisting>
<para>
Fetches the set of attach points for an icon. An attach point
is a location in the icon that can be used as anchor points for attaching
emblems or overlays to the icon.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>points</parameter>&#160;:</term>
<listitem><simpara> location to store pointer to an array of points, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
         free the array of points with <link linkend="g-free"><function>g_free()</function></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>n_points</parameter>&#160;:</term>
<listitem><simpara> location to store the number of points in <parameter>points</parameter>, or <link linkend="NULL--CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> <link linkend="TRUE--CAPS"><literal>TRUE</literal></link> if there are any attach points for the icon.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>
<refsect2 id="gtk-icon-info-get-display-name" role="function" condition="since:2.4">
<title>gtk_icon_info_get_display_name ()</title>
<indexterm zone="gtk-icon-info-get-display-name" role="2.4"><primary sortas="icon_info_get_display_name">gtk_icon_info_get_display_name</primary></indexterm><programlisting>const <link linkend="gchar">gchar</link> *       gtk_icon_info_get_display_name      (<link linkend="GtkIconInfo">GtkIconInfo</link> *icon_info);</programlisting>
<para>
Gets the display name for an icon. A display name is a
string to be used in place of the icon name in a user
visible context like a list of icons.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_info</parameter>&#160;:</term>
<listitem><simpara> a <link linkend="GtkIconInfo"><type>GtkIconInfo</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&#160;:</term><listitem><simpara> the display name for the icon or <link linkend="NULL--CAPS"><literal>NULL</literal></link>, if
 the icon doesn't have a specified display name. This value
 is owned <parameter>icon_info</parameter> and must not be modified or free.

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since 2.4</para></refsect2>

</refsect1>

<refsect1 id="GtkIconTheme.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="GtkIconTheme-changed" role="signal"><title>The <literal>&quot;changed&quot;</literal> signal</title>
<indexterm zone="GtkIconTheme-changed"><primary sortas="IconTheme::changed">GtkIconTheme::changed</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkIconTheme">GtkIconTheme</link> *icon_theme,
                                                        <link linkend="gpointer">gpointer</link>      user_data)       : Run Last</programlisting>
<para>
Emitted when the current icon theme is switched or GTK+ detects
that a change has occurred in the contents of the current
icon theme.</para>
<para>
</para><variablelist role="params">
<varlistentry><term><parameter>icon_theme</parameter>&#160;:</term>
<listitem><simpara> the icon theme
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&#160;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>



</refentry>
